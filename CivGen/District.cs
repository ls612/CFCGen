//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CivGen
{
    using System;
    using System.Collections.Generic;
    
    public partial class District
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public District()
        {
            this.Adjacency_YieldChanges = new HashSet<Adjacency_YieldChanges>();
            this.AppealHousingChanges = new HashSet<AppealHousingChanx>();
            this.Boosts = new HashSet<Boost>();
            this.Buildings = new HashSet<Building>();
            this.Buildings1 = new HashSet<Building>();
            this.District_CitizenGreatPersonPoints = new HashSet<District_CitizenGreatPersonPoints>();
            this.District_CitizenYieldChanges = new HashSet<District_CitizenYieldChanges>();
            this.District_GreatPersonPoints = new HashSet<District_GreatPersonPoints>();
            this.District_TradeRouteYields = new HashSet<District_TradeRouteYields>();
            this.DistrictModifiers = new HashSet<DistrictModifier>();
            this.GreatPersonClasses = new HashSet<GreatPersonClass>();
            this.GreatPersonIndividuals = new HashSet<GreatPersonIndividual>();
            this.MajorStartingUnits = new HashSet<MajorStartingUnit>();
            this.Projects = new HashSet<Project>();
            this.StartingBuildings = new HashSet<StartingBuilding>();
            this.UnitOperations = new HashSet<UnitOperation>();
            this.Units = new HashSet<Unit>();
            this.Adjacency_YieldChanges1 = new HashSet<Adjacency_YieldChanges>();
            this.Features = new HashSet<Feature>();
            this.Terrains = new HashSet<Terrain>();
            this.Districts1 = new HashSet<District>();
            this.Traits = new HashSet<Trait>();
        }
    
        public string DistrictType { get; set; }
        public string Name { get; set; }
        public string PrereqTech { get; set; }
        public string PrereqCivic { get; set; }
        public bool Coast { get; set; }
        public string Description { get; set; }
        public long Cost { get; set; }
        public bool RequiresPlacement { get; set; }
        public bool RequiresPopulation { get; set; }
        public bool NoAdjacentCity { get; set; }
        public bool CityCenter { get; set; }
        public bool Aqueduct { get; set; }
        public bool InternalOnly { get; set; }
        public Nullable<bool> ZOC { get; set; }
        public bool FreeEmbark { get; set; }
        public Nullable<long> HitPoints { get; set; }
        public bool CaptureRemovesBuildings { get; set; }
        public bool CaptureRemovesCityDefenses { get; set; }
        public string PlunderType { get; set; }
        public long PlunderAmount { get; set; }
        public long TradeRouteCapacity { get; set; }
        public bool TradeEmbark { get; set; }
        public string MilitaryDomain { get; set; }
        public string CostProgressionModel { get; set; }
        public long CostProgressionParam1 { get; set; }
        public string TraitType { get; set; }
        public long Appeal { get; set; }
        public long Housing { get; set; }
        public long Entertainment { get; set; }
        public bool OnePerCity { get; set; }
        public bool AllowsHolyCity { get; set; }
        public long Maintenance { get; set; }
        public long AirSlots { get; set; }
        public Nullable<long> CitizenSlots { get; set; }
        public long TravelTime { get; set; }
        public long CityStrengthModifier { get; set; }
        public bool AdjacentToLand { get; set; }
        public bool CanAttack { get; set; }
        public string AdvisorType { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Adjacency_YieldChanges> Adjacency_YieldChanges { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AppealHousingChanx> AppealHousingChanges { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Boost> Boosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Building> Buildings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Building> Buildings1 { get; set; }
        public virtual Civic Civic { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<District_CitizenGreatPersonPoints> District_CitizenGreatPersonPoints { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<District_CitizenYieldChanges> District_CitizenYieldChanges { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<District_GreatPersonPoints> District_GreatPersonPoints { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<District_TradeRouteYields> District_TradeRouteYields { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DistrictModifier> DistrictModifiers { get; set; }
        public virtual Type Type { get; set; }
        public virtual Trait Trait { get; set; }
        public virtual Technology Technology { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GreatPersonClass> GreatPersonClasses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GreatPersonIndividual> GreatPersonIndividuals { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MajorStartingUnit> MajorStartingUnits { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Project> Projects { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<StartingBuilding> StartingBuildings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UnitOperation> UnitOperations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Adjacency_YieldChanges> Adjacency_YieldChanges1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Feature> Features { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Terrain> Terrains { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<District> Districts1 { get; set; }
        public virtual District District1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Trait> Traits { get; set; }
    }
}
