//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CivGen
{
    using System;
    using System.Collections.Generic;
    
    public partial class Improvement
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Improvement()
        {
            this.Adjacency_YieldChanges = new HashSet<Adjacency_YieldChanges>();
            this.Boosts = new HashSet<Boost>();
            this.GoodyHuts = new HashSet<GoodyHut>();
            this.Improvement_BonusYieldChanges = new HashSet<Improvement_BonusYieldChanges>();
            this.Improvement_ValidResources = new HashSet<Improvement_ValidResources>();
            this.Improvement_ValidTerrains = new HashSet<Improvement_ValidTerrains>();
            this.Improvement_YieldChanges = new HashSet<Improvement_YieldChanges>();
            this.ImprovementModifiers = new HashSet<ImprovementModifier>();
            this.Adjacency_YieldChanges1 = new HashSet<Adjacency_YieldChanges>();
            this.Units = new HashSet<Unit>();
            this.Features = new HashSet<Feature>();
        }
    
        public string ImprovementType { get; set; }
        public string Name { get; set; }
        public bool BarbarianCamp { get; set; }
        public string PrereqTech { get; set; }
        public string PrereqCivic { get; set; }
        public bool Buildable { get; set; }
        public string Description { get; set; }
        public bool RemoveOnEntry { get; set; }
        public long DispersalGold { get; set; }
        public string PlunderType { get; set; }
        public long PlunderAmount { get; set; }
        public bool Goody { get; set; }
        public Nullable<long> TilesPerGoody { get; set; }
        public Nullable<long> GoodyRange { get; set; }
        public string Icon { get; set; }
        public string TraitType { get; set; }
        public long Housing { get; set; }
        public long TilesRequired { get; set; }
        public bool SameAdjacentValid { get; set; }
        public long RequiresRiver { get; set; }
        public bool EnforceTerrain { get; set; }
        public bool BuildInLine { get; set; }
        public bool CanBuildOutsideTerritory { get; set; }
        public bool BuildOnFrontier { get; set; }
        public long AirSlots { get; set; }
        public long DefenseModifier { get; set; }
        public long GrantFortification { get; set; }
        public Nullable<long> MinimumAppeal { get; set; }
        public bool Coast { get; set; }
        public string YieldFromAppeal { get; set; }
        public long WeaponSlots { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Adjacency_YieldChanges> Adjacency_YieldChanges { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Boost> Boosts { get; set; }
        public virtual Civic Civic { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GoodyHut> GoodyHuts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Improvement_BonusYieldChanges> Improvement_BonusYieldChanges { get; set; }
        public virtual Improvement_Tourism Improvement_Tourism { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Improvement_ValidResources> Improvement_ValidResources { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Improvement_ValidTerrains> Improvement_ValidTerrains { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Improvement_YieldChanges> Improvement_YieldChanges { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ImprovementModifier> ImprovementModifiers { get; set; }
        public virtual Type Type { get; set; }
        public virtual Yield Yield { get; set; }
        public virtual Trait Trait { get; set; }
        public virtual Technology Technology { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Adjacency_YieldChanges> Adjacency_YieldChanges1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Feature> Features { get; set; }
    }
}
