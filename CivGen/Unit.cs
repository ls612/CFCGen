//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CivGen
{
    using System;
    using System.Collections.Generic;
    
    public partial class Unit
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Unit()
        {
            this.BonusMinorStartingUnits = new HashSet<BonusMinorStartingUnit>();
            this.Boosts = new HashSet<Boost>();
            this.Boosts1 = new HashSet<Boost>();
            this.GreatPersonClasses = new HashSet<GreatPersonClass>();
            this.MajorStartingUnits = new HashSet<MajorStartingUnit>();
            this.Technologies = new HashSet<Technology>();
            this.Unit_BuildingPrereqs = new HashSet<Unit_BuildingPrereqs>();
            this.Improvements = new HashSet<Improvement>();
            this.Routes = new HashSet<Route>();
            this.UnitAiTypes = new HashSet<UnitAiType>();
            this.Units1 = new HashSet<Unit>();
            this.Units = new HashSet<Unit>();
            this.Units2 = new HashSet<Unit>();
            this.Units3 = new HashSet<Unit>();
        }
    
        public string UnitType { get; set; }
        public string Name { get; set; }
        public long BaseSightRange { get; set; }
        public long BaseMoves { get; set; }
        public long Combat { get; set; }
        public long RangedCombat { get; set; }
        public long Range { get; set; }
        public long Bombard { get; set; }
        public string Domain { get; set; }
        public string FormationClass { get; set; }
        public long Cost { get; set; }
        public Nullable<long> PopulationCost { get; set; }
        public bool FoundCity { get; set; }
        public bool FoundReligion { get; set; }
        public bool MakeTradeRoute { get; set; }
        public bool EvangelizeBelief { get; set; }
        public bool LaunchInquisition { get; set; }
        public bool RequiresInquisition { get; set; }
        public long BuildCharges { get; set; }
        public long ReligiousStrength { get; set; }
        public long ReligionEvictPercent { get; set; }
        public long SpreadCharges { get; set; }
        public bool ExtractsArtifacts { get; set; }
        public string Description { get; set; }
        public string Flavor { get; set; }
        public bool CanCapture { get; set; }
        public bool CanRetreatWhenCaptured { get; set; }
        public string TraitType { get; set; }
        public bool AllowBarbarians { get; set; }
        public string CostProgressionModel { get; set; }
        public long CostProgressionParam1 { get; set; }
        public string PromotionClass { get; set; }
        public long InitialLevel { get; set; }
        public long NumRandomChoices { get; set; }
        public string PrereqTech { get; set; }
        public string PrereqCivic { get; set; }
        public string PrereqDistrict { get; set; }
        public Nullable<long> PrereqPopulation { get; set; }
        public string LeaderType { get; set; }
        public bool CanTrain { get; set; }
        public string StrategicResource { get; set; }
        public string PurchaseYield { get; set; }
        public bool MustPurchase { get; set; }
        public long Maintenance { get; set; }
        public bool Stackable { get; set; }
        public long AirSlots { get; set; }
        public bool CanTargetAir { get; set; }
        public string PseudoYieldType { get; set; }
        public bool ZoneOfControl { get; set; }
        public long AntiAirCombat { get; set; }
        public bool Spy { get; set; }
        public bool WMDCapable { get; set; }
        public long ParkCharges { get; set; }
        public bool IgnoreMoves { get; set; }
        public bool TeamVisibility { get; set; }
        public string ObsoleteTech { get; set; }
        public string ObsoleteCivic { get; set; }
        public string MandatoryObsoleteTech { get; set; }
        public string MandatoryObsoleteCivic { get; set; }
        public string AdvisorType { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BonusMinorStartingUnit> BonusMinorStartingUnits { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Boost> Boosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Boost> Boosts1 { get; set; }
        public virtual Civic Civic { get; set; }
        public virtual Civic Civic1 { get; set; }
        public virtual Civic Civic2 { get; set; }
        public virtual Civic Civic3 { get; set; }
        public virtual District District { get; set; }
        public virtual Flavor Flavor1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GreatPersonClass> GreatPersonClasses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MajorStartingUnit> MajorStartingUnits { get; set; }
        public virtual PseudoYield PseudoYield { get; set; }
        public virtual Resource Resource { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Technology> Technologies { get; set; }
        public virtual Technology Technology { get; set; }
        public virtual Technology Technology1 { get; set; }
        public virtual Technology Technology2 { get; set; }
        public virtual Trait Trait { get; set; }
        public virtual Type Type { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit_BuildingPrereqs> Unit_BuildingPrereqs { get; set; }
        public virtual Yield Yield { get; set; }
        public virtual Yield Yield1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Improvement> Improvements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Route> Routes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UnitAiType> UnitAiTypes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units { get; set; }
        public virtual Unit Units11 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units2 { get; set; }
        public virtual Unit Units12 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Unit> Units3 { get; set; }
    }
}
